#!/bin/zsh -eu
#
# Copyright 2016 Omni Development, Inc. All rights reserved.
#
# This software may only be used and reproduced according to the
# terms in the file OmniSourceLicense.html, which should be
# distributed with this project and can also be found at
# <http://www.omnigroup.com/developer/sourcecode/sourcelicense/>.
#
# $Id$


# If we add the version number and bundle identifier information for the priviledged helper too as global settings in Xcode, including preprocessor defines and compile-time defines, it causes many extra precompiled modules to be generated (due to the different sets of -D flags present in compiles). Instead of defining them one place, we'll use this script to check that all the versions match.

VERSION_NUMBER=7

INSTALL_SERVICE_PATH="$CONFIGURATION_BUILD_DIR/OmniSoftwareUpdate.framework/Versions/A/XPCServices/com.omnigroup.OmniSoftwareUpdate.OSUInstallerService.xpc"
HELPER_EXPECTED_NAME="com.omnigroup.OmniSoftwareUpdate.OSUInstallerPrivilegedHelper.$VERSION_NUMBER"
HELPER_EXPECTED_PATH="$INSTALL_SERVICE_PATH/Contents/Library/LaunchServices/$HELPER_EXPECTED_NAME"

# Check that the source was compiled with the expected version number
if grep -q "#define OSUInstallerPrivilegedHelperVersion $VERSION_NUMBER" OSUInstallerPrivilegedHelper/OSUInstallerPrivilegedHelper.h ; then
    # version number OK
else
    echo "*** Error: OSUInstallerPrivilegedHelper.h should have the version number $VERSION_NUMBER"
    exit 1
fi

# Make sure the priviledged helper too exists with the right name.
if [ ! -x "$HELPER_EXPECTED_PATH" ]; then
    echo "*** Error: Missing build product $HELPER_EXPECTED_PATH"
    exit 1
fi

# The Info.plist for the priviledged helper is installed as a Mach-O section.
# Make sure its embedded bundle identifier, name, and version are as expected
# We `exec -c` here to clear the environment so that the override of DEVELOPER_DIR works, instead of having mismatched settings between what xcodebuild passes and manually selecting Xcode 7.3.1.
(exec -c ../../Scripts/DumpEmbeddedPlist "$HELPER_EXPECTED_PATH") > "$TMPDIR/OSUCheckVersionNumber-$$.plist"

if [ $(/usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" "$TMPDIR/OSUCheckVersionNumber-$$.plist") != "$HELPER_EXPECTED_NAME" ]; then
    echo "*** Error: CFBundleIdentifier should be $HELPER_EXPECTED_NAME"
    exit 1
fi

if [ $(/usr/libexec/PlistBuddy -c "Print :CFBundleName" "$TMPDIR/OSUCheckVersionNumber-$$.plist") != "$HELPER_EXPECTED_NAME" ]; then
    echo "*** Error: CFBundleName should be $HELPER_EXPECTED_NAME"
    exit 1
fi

if [ $(/usr/libexec/PlistBuddy -c "Print :CFBundleVersion" "$TMPDIR/OSUCheckVersionNumber-$$.plist") != "$VERSION_NUMBER" ]; then
    echo "*** Error: CFBundleVersion should be $VERSION_NUMBER"
    exit 1
fi

# The install service and helper tool need to point at each other via SMPrivilegedExecutables and SMAuthorizedClients keys

# Two possiblities, based on whether we are a release build or not.
ACTUAL=$(/usr/libexec/PlistBuddy -c "Print :SMPrivilegedExecutables:$HELPER_EXPECTED_NAME" "$INSTALL_SERVICE_PATH/Contents/Info.plist")
if [ "$CONFIGURATION" = "Debug" ]; then
    EXPECTED="identifier $HELPER_EXPECTED_NAME and anchor apple generic and certificate leaf[subject.CN] = \"Mac Developer:\"*"
elif [ "$CONFIGURATION" = "Release" ]; then
    EXPECTED="identifier $HELPER_EXPECTED_NAME and anchor apple generic and certificate leaf[subject.CN] = \"Developer ID Application: The Omni Group (34YW5XSRB7)\""
else
    echo "Unexpected configuration $CONFIGURATION"
    exit 1
fi
if [ "$ACTUAL" != "$EXPECTED" ]; then
    echo "*** Error: Installer service should list the priviledged helper tool in its SMPrivilegedExecutables"
    echo "   Expected: $EXPECTED"
    echo "      Found: $ACTUAL"
    exit 1
fi

# For Debug builds, we have two authorized clients. For Release, one. It isn't clear why we have both in Debug builds -- might be just historical cruft and maybe we can always have exactly one.
ACTUAL=$(/usr/libexec/PlistBuddy -c "Print :SMAuthorizedClients:0" "$TMPDIR/OSUCheckVersionNumber-$$.plist")
EXPECTED="identifier com.omnigroup.OmniSoftwareUpdate.OSUInstallerService and anchor apple generic and certificate leaf[subject.CN] = \"Developer ID Application: The Omni Group (34YW5XSRB7)\""
if [ "$ACTUAL" != "$EXPECTED" ]; then
    echo "*** Error: Helper tool should list Mac Developer version of installer service its SMAuthorizedClients"
    echo "   Expected: $EXPECTED"
    echo "      Found: $ACTUAL"
    exit 1
fi

if [ "$CONFIGURATION" = "Debug" ]; then
    ACTUAL=$(/usr/libexec/PlistBuddy -c "Print :SMAuthorizedClients:1" "$TMPDIR/OSUCheckVersionNumber-$$.plist")
    EXPECTED="identifier com.omnigroup.OmniSoftwareUpdate.OSUInstallerService and anchor apple generic and certificate leaf[subject.CN] = \"Mac Developer:\"*"
    if [ "$ACTUAL" != "$EXPECTED" ]; then
        echo "*** Error: Helper tool should list developer ID version of installer service its SMAuthorizedClients"
        echo "   Expected: $EXPECTED"
        echo "      Found: $ACTUAL"
        exit 1
    fi
fi

# TODO: Check the count of SMAuthorizedClients and SMPrivilegedExecutables? Easier if they both always have exactly one entry.
